@using System
@using System.Globalization 
@using System.Threading.Tasks 
@using Library.Models
@using Web.Controllers 
@using Web.Repositories 
@inject ConfigRepository Config
@inject IBoxRepository Boxes
@{ 
	var config = Config.GetConfig();
	var controller = ((string) ViewContext.RouteData.Values["controller"]).ToLower();
	var action = ((string) ViewContext.RouteData.Values["action"]).ToLower();
	var articleId = (string) ViewContext.RouteData.Values["id"]; 
	var locale = CultureInfo.DefaultThreadCurrentUICulture.ToString();
	var language = locale.Split('-').First(); 
	var boxesHeader = Boxes.BoxList((int)BoxPlacement.Header, articleId, controller); 
	var boxesFooter = Boxes.BoxList((int)BoxPlacement.Footer, articleId, controller);
    var boxesTop = Boxes.BoxList((int)BoxPlacement.Top, articleId, controller); 
	var boxesBottom = Boxes.BoxList((int)BoxPlacement.Bottom, articleId, controller);
    var boxesLeft = Boxes.BoxList((int)BoxPlacement.Left, articleId, controller); 
	var boxesRIght = Boxes.BoxList((int)BoxPlacement.Right, articleId, controller);
}
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:og="http://ogp.me/ns#" lang="@language" xml:lang="@language">
<head>
	<meta charset="utf-8" />
	<meta http-equiv="content-type" content="text/html; charset=UTF-8" />
	<meta http-equiv="content-language" content="@language" />
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
	<meta name="generator" content="@config.SearchEngines.Generator" />
	<meta name="author" content="@config.SearchEngines.Author" />
	<meta name="title" content="@ViewBag.MetaTitle" />
	<meta name="keywords" content="@ViewBag.MetaKeywords" />
	<meta name="description" content="@ViewBag.MetaDescription" />
	<meta name="robots" content="all" />
	<meta name="googlebot" content="all" />
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" /> 
	@if (ViewBag.Refresh > 0) 
	{
	<meta http-equiv="refresh" content="@ViewBag.Refresh"> 
	} 
	@if (!config.SearchEngines.GoogleTranslation) 
	{
	<meta name="google" content="notranslate"> 
	}
	@if (config.SearchEngines.GoogleVerification != "") 
	{
	<meta name="google-site-verification" content="@config.SearchEngines.GoogleVerification" /> 
	}
	@if (config.SocialMedia.SocialMediaTags) 
	{
	<meta property="og:title" content="@ViewBag.MetaTitle" />
	<meta property="og:type" content="@config.SearchEngines" />
	<meta property="og:site_name" content="@config.SearchEngines.Author" />
	<meta property="og:url" content="@ViewBag.NavigationUrl" />
	<meta property="og:description" content="@ViewBag.MetaDescription" /> 
	}

	<!-- Windows 8 tiles -->
	<meta name="application-name" content="@config.Name" />
	<meta name="msapplication-TileColor" content="@config.Color" />
	<meta name="msapplication-TileImage" content="~/@config.Path/myicon-inverse.png" />

	<!-- Favicon 195x195 -->
	<link rel="icon" type="image/png" href="~/@config.Path/myicon.png" />

	<link rel="canonical" href="@ViewBag.NavigationUrl" />

	<title>@ViewBag.MetaTitle</title>

	<environment names="Development">
		<link rel="stylesheet" href="~/css/@(@config.Path).bootstrap.css" />
	</environment>
	<environment names="Staging,Production">
		<link rel="stylesheet" href="~/css/@(@config.Path).bootstrap.min.css" asp-append-version="true" />
	</environment>
</head>

<body class="template-@controller">
	<div class="container">
        <header>
            @foreach (var box in boxesHeader)
            {
                @await Component.InvokeAsync(box.Action)
            }
        </header>

        <section>
            <header>
                @foreach (var box in boxesTop)
                {
                    @await Component.InvokeAsync(box.Action)
                }
            </header>

            @RenderBody()
            
            <footer>
                @foreach (var box in boxesBottom)
                {
                    @await Component.InvokeAsync(box.Action)
                }
            </footer>
        </section>

        <footer>
            @foreach (var box in boxesFooter)
            {
                @await Component.InvokeAsync(box.Action)
            }
        </footer>
    </div>

	<environment names="Development">
		<script src="~/lib/jquery/dist/jquery.js"></script>
		<script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
		<script src="~/js/polyfill.js" asp-append-version="true"></script>
		<script src="~/js/site.js" asp-append-version="true"></script>
		<script src="~/js/backtotop.js" asp-append-version="true"></script>
		<script src="~/js/carousel.js" asp-append-version="true"></script>
		<script src="~/js/formvalidate.js" asp-append-version="true"></script>
	</environment>
	<environment names="Staging,Production">
		<script src="https://ajax.aspnetcdn.com/ajax/jquery/jquery-2.2.3.min.js" asp-fallback-src="~/lib/jquery/dist/jquery.min.js"
			asp-fallback-test="window.jQuery">
		</script>
		<script src="https://ajax.aspnetcdn.com/ajax/bootstrap/3.3.6/bootstrap.min.js" asp-fallback-src="~/lib/bootstrap/dist/js/bootstrap.min.js"
			asp-fallback-test="window.jQuery && window.jQuery.fn && window.jQuery.fn.modal">
		</script>
		<script src="~/js/site.min.js" asp-append-version="true"></script>
	</environment>
	
	@RenderSection("scripts", required: false)
</body>
</html>